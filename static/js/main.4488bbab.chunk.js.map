{"version":3,"sources":["components/GoodCard.jsx","components/GoodList.jsx","components/variables.js","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","SORT","goodsFromServer","App","useState","selectedGoodType","setSelectedGoodType","goodsArry","type","result","reverse","sort","good1","good2","length","localeCompare","SortAndReverseArray","className","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SACGA,KCAQC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SCLpBI,EACD,eADCA,EAEH,cAFGA,EAGF,eCIEC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BK,IAAMC,EAAM,WACjB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACMC,EA5BR,SACER,EAAOS,GAEP,IAAIC,EAAS,KAEb,OAAQD,GACN,KAAKP,EACHQ,EAAS,YAAIV,GAAOW,UACpB,MAEF,KAAKT,EACHQ,EAAS,YAAIV,GAAOY,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAChE,MAEF,KAAKb,EACHQ,EAAS,YAAIV,GAAOY,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,cAAcF,MAC/D,MAEF,QACEJ,EAAM,YAAOV,GAIjB,OAAOU,EAKWO,CAAoBd,EAAiBG,GAEvD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACET,KAAK,SACLU,QAAS,kBAAMZ,EAAoBL,IACnCgB,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAkBI,IAJlC,iCAUA,wBACEG,KAAK,SACLU,QAAS,kBAAMZ,EAAoBL,IACnCgB,UAAWE,IAAG,oBAAqB,CACjC,kBAAmBlB,IAAgBI,IAJvC,4BAUA,wBACEG,KAAK,SACLU,QAAS,kBAAMZ,EAAoBL,IACnCgB,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAiBI,IAJjC,sBAUEJ,IAAkBI,GAAoBJ,IAAgBI,GACrDJ,IAAiBI,IAClB,wBACEG,KAAK,SACLS,UAAWE,IAAG,mBAAoB,CAAE,YAAY,IAChDD,QAAS,WACPZ,EAAoB,KAJxB,sBAYJ,cAAC,EAAD,CAAUP,MAAOQ,QC9FvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4488bbab.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import { GoodCard } from './GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","export const SORT = {\n  ALPHABET: 'sort_alfabet',\n  LENGTH: 'sort_length',\n  REVERSE: 'sort_reverse',\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\nimport { SORT } from './components/variables';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction SortAndReverseArray(\n  goods, type,\n) {\n  let result = null;\n\n  switch (type) {\n    case SORT.REVERSE:\n      result = [...goods].reverse();\n      break;\n\n    case SORT.LENGTH:\n      result = [...goods].sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    case SORT.ALPHABET:\n      result = [...goods].sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    default:\n      result = [...goods];\n      break;\n  }\n\n  return result;\n}\n\nexport const App = () => {\n  const [selectedGoodType, setSelectedGoodType] = useState('');\n  const goodsArry = SortAndReverseArray(goodsFromServer, selectedGoodType);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSelectedGoodType(SORT.ALPHABET)}\n          className={cn('button is-info', {\n            'is-light': SORT.ALPHABET !== selectedGoodType,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSelectedGoodType(SORT.LENGTH)}\n          className={cn('button is-success', {\n            'is-light active': SORT.LENGTH !== selectedGoodType,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSelectedGoodType(SORT.REVERSE)}\n          className={cn('button is-warning', {\n            'is-light': SORT.REVERSE !== selectedGoodType,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(SORT.ALPHABET === selectedGoodType || SORT.LENGTH === selectedGoodType\n        || SORT.REVERSE === selectedGoodType) && (\n          <button\n            type=\"button\"\n            className={cn('button is-danger', { 'is-light': true })}\n            onClick={() => {\n              setSelectedGoodType('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={goodsArry} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}